{"version":3,"sources":["components/Main.js","components/AddForm.js","App.js","serviceWorker.js","index.js"],"names":["Main","state","open","handleDrawerOpen","_this","setState","handleDrawerClose","_this2","this","_this$props","props","classes","theme","poems","current","poem","title","stanzas","text","split","map","stanza","index","react_default","a","createElement","Typography_default","key","paragraph","className","root","CssBaseline_default","AppBar_default","position","classNames","appBar","Object","defineProperty","appBarShift","Toolbar_default","disableGutters","IconButton_default","color","aria-label","onClick","menuButton","hide","Menu_default","variant","noWrap","Drawer_default","drawer","anchor","paper","drawerPaper","drawerHeader","direction","ChevronLeft_default","ChevronRight_default","Divider_default","List_default","_ref","_","ListItem_default","button","changeCurrent","ListItemIcon_default","Book_default","ListItemText_default","primary","AttachFile_default","CloudDownload_default","content","contentShift","React","Component","withStyles","display","transition","transitions","create","easing","sharp","duration","leavingScreen","width","concat","marginLeft","easeOut","enteringScreen","marginRight","flexShrink","objectSpread","alignItems","padding","mixins","toolbar","justifyContent","flexGrow","spacing","unit","withTheme","Transition","Slide_default","assign","AddForm","poemTitle","poemText","handleClickOpen","handleClose","handleSubmit","onSubmit","handleTextChange","event","field","target","value","Fab_default","fab","Add_default","Dialog_default","fullScreen","onClose","TransitionComponent","Close_default","flex","Button_default","TextField_default","required","label","margin","onChange","textarea","multiline","helperText","float","bottom","right","extendedIcon","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","addPoem","bind","assertThisInitialized","changeCurrentPoem","toConsumableArray","analysis","length","components_Main","components_AddForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.53707d5c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport BookIcon from '@material-ui/icons/Book';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n});\n\nclass Main extends React.Component {\n  state = {\n    open: false,\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes, theme, poems, current } = this.props;\n    const { open } = this.state;\n    const poem = poems[current];\n    const title = poem ? poem.title : \"\";\n    const stanzas = poem ? poem.text.split(\"\\n\\n\").map((stanza, index) => (\n      <Typography key={index} paragraph>{stanza}</Typography>\n    )) : \"To start, Add a new poem.\";\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          className={classNames(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n        >\n          <Toolbar disableGutters={!open}>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerOpen}\n              className={classNames(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              PoetryLab: {title}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={this.handleDrawerClose}>\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            {this.props.poems.map(({title, _}, index) => (\n              <ListItem button key={title} onClick={() => this.props.changeCurrent(index)}>\n                <ListItemIcon><BookIcon /></ListItemIcon>\n                <ListItemText primary={title} />\n              </ListItem>\n            ))}\n          </List>\n          <Divider />\n          <List>\n            <ListItem button key=\"Upload a zip\">\n              <ListItemIcon><AttachFileIcon /></ListItemIcon>\n              <ListItemText primary=\"Upload a zip\" />\n            </ListItem>\n            <ListItem button key=\"Download all\">\n              <ListItemIcon><CloudDownloadIcon /></ListItemIcon>\n              <ListItemText primary=\"Download all\" />\n            </ListItem>\n          </List>\n        </Drawer>\n        <main\n          className={classNames(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <div className={classes.drawerHeader} />\n          {stanzas}\n        </main>\n      </div>\n    );\n  }\n}\n\nMain.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n  poems: PropTypes.array.isRequired,\n  current: PropTypes.number.isRequired,\n  changeCurrent: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Main);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  flex: {\n    flex: 1,\n  },\n  fab: {\n    margin: theme.spacing.unit,\n    position: 'absolute',\n    float: 'right',\n    bottom: theme.spacing.unit,\n    right: theme.spacing.unit,\n  },\n  extendedIcon: {\n    marginRight: theme.spacing.unit,\n  },\n  textarea: {\n    width: \"50em\",\n  },\n});\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nclass AddForm extends React.Component {\n  state = {\n    open: false,\n    poemTitle: \"\",\n    poemText: \"\",\n  };\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleSubmit = () => {\n    this.props.onSubmit(this.state.poemTitle, this.state.poemText);\n    this.handleClose();\n  };\n\n  handleTextChange = (event, field) => {\n    this.setState({\n      [[field]]: event.target.value,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Fab color=\"primary\" variant=\"extended\" aria-label=\"Add\" className={classes.fab}  onClick={this.handleClickOpen}>\n            <AddIcon />\n            Add Poem\n        </Fab>\n        <Dialog\n          fullScreen\n          open={this.state.open}\n          onClose={this.handleClose}\n          TransitionComponent={Transition}\n        >\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <IconButton color=\"inherit\" onClick={this.handleClose} aria-label=\"Close\">\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                Add Poem\n              </Typography>\n              <Button color=\"inherit\" onClick={this.handleSubmit}>\n                Submit\n              </Button>\n            </Toolbar>\n          </AppBar>\n          <List>\n            <ListItem button>\n              <TextField\n                required\n                label=\"Title\"\n                margin=\"normal\"\n                onChange={event => this.handleTextChange(event, \"poemTitle\")}\n              />  \n            </ListItem>\n            <ListItem button>\n              <TextField\n                required\n                className={classes.textarea}\n                label=\"Enter your poem text\"\n                multiline\n                margin=\"normal\"\n                variant=\"filled\"\n                helperText=\"You can use multiline\"\n                onChange={event => this.handleTextChange(event, \"poemText\")}\n              />  \n            </ListItem>\n          </List>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nAddForm.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(AddForm);","import React, { Component } from 'react'\n\nimport Main from './components/Main'\nimport AddForm from './components/AddForm'\n\n\nclass App extends Component {\n  state = {\n    poems: [],\n    current: -1\n  }\n\n  constructor(props) {\n    super(props);\n    this.addPoem = this.addPoem.bind(this);\n    this.changeCurrentPoem = this.changeCurrentPoem.bind(this);\n  }\n\n  addPoem(title, text) {\n    this.setState({\n      poems: [...this.state.poems, {title, text, analysis: {}}],\n      current: this.state.poems.length,\n    })\n  }\n\n  changeCurrentPoem(index) {\n    this.setState({\n      current: index,\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Main {...this.state} changeCurrent={this.changeCurrentPoem} />\n        <AddForm onSubmit={this.addPoem} />\n      </div>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}